services:
    rmq:
        image: rabbitmq:3.7.18-management-alpine
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: rabbitmq-diagnostics check_port_connectivity
            interval: 1s
            timeout: 3s
            retries: 30
    mongodb:
        image: mongo:latest
        ports:
            - 27017:27017
        volumes:
            - ./db-entrypoint.sh:/docker-entrypoint-initdb.d/db-entrypoint.sh
            - ./mongo-data:/data/db
        restart: always
        env_file:
            - ../consumer/.env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${DB_ROOT_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_ROOT_PASS}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${DB_USER}:${DB_PASSWORD}@localhost:${DB_PORT}/?authSource=${DB_NAME} --quiet
            interval: 30s
            timeout: 10s
            retries: 5

    nest-app-publisher:
        build:
            context: ../publisher
            dockerfile: ../docker/Dockerfile.dev
        ports:
            - '3000:3000'
        depends_on:
            rmq:
                condition: service_healthy
            # mongodb:
            #     condition: service_healthy
        volumes:
            - .:/app
            - /app/node_modules
        restart: unless-stopped
        env_file:
            - ../publisher/.env
        # develop:
        #     watch:
        #         - action: sync
        #           path: ../src
        #           target: /app/src
        #           ignore:
        #               - node_modules/
        #         - action: rebuild
        #           path: ../package.json
    nest-app-consumer:
        build:
            context: ../consumer
            dockerfile: ../docker/Dockerfile.dev
        ports:
            - '3001:3001'
        depends_on:
            rmq:
                condition: service_healthy
            # mongodb:
            #     condition: service_healthy
        volumes:
            - .:/app
            - /app/node_modules
        restart: unless-stopped
        env_file:
            - ../consumer/.env
        # develop:
        #     watch:
        #         - action: sync
        #           path: ../src
        #           target: /app/src
        #           ignore:
        #               - node_modules/
        #         - action: rebuild
        #           path: ../package.json
